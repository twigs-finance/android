apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def acraProperties = new Properties()
try {
    def acraPropertiesFile = project.file("acra.properties")
    acraProperties.load(new FileInputStream(acraPropertiesFile))
} catch (FileNotFoundException ignored) {
    logger.warn("Unable to load ACRA properties. Error reporting won't be available")
    acraProperties['url'] = ""
    acraProperties['user'] = ""
    acraProperties['pass'] = ""
}

android {
    compileSdkVersion 30
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    defaultConfig {
        applicationId "com.wbrawner.budget"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables {
            useSupportLibrary = true
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "ACRA_URL", "\"${acraProperties['url']}\""
        buildConfigField "String", "ACRA_USER", "\"${acraProperties['user']}\""
        buildConfigField "String", "ACRA_PASS", "\"${acraProperties['pass']}\""
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_URL", "\"https://budget-api.intra.wbrawner.com/\""
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {
    implementation project(':common')
    implementation project(':budgetlib')
    implementation project(':storage')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core:1.3.2'
    implementation 'androidx.media:media:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.emoji:emoji-bundled:1.1.0'
    implementation 'com.github.BlacKCaT27:CurrencyEditText:2.0.2'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // Dagger
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    implementation "ch.acra:acra-http:$acra_version"
    implementation "ch.acra:acra-advanced-scheduler:$acra_version"

    debugImplementation "com.willowtreeapps.hyperion:hyperion-core:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-attr:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-build-config:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-crash:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-disk:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-geiger-counter:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-measurement:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-phoenix:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-recorder:$hyperion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-shared-preferences:$hyperion"
}
